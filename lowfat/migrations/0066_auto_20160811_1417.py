# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-11 14:17
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('fat', '0065_auto_20160811_1052'),
    ]

    operations = [
        migrations.CreateModel(
            name='Claimed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('forenames', models.CharField(max_length=120)),
                ('surname', models.CharField(max_length=120)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(help_text='The number that we can contact you.', max_length=120)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('R', 'Rather not say')], default='R', max_length=1)),
                ('home_country', django_countries.fields.CountryField(default='GB', max_length=2)),
                ('home_city', models.CharField(max_length=120)),
                ('home_lon', models.FloatField(blank=True, null=True)),
                ('home_lat', models.FloatField(blank=True, null=True)),
                ('photo', models.FileField(blank=True, null=True, upload_to='photos/')),
                ('research_area', models.TextField(help_text='Please describe your research')),
                ('research_area_code', models.CharField(choices=[('A100', 'Pre-clinical medicine'), ('A200', 'Pre-clinical dentistry'), ('A300', 'Clinical medicine'), ('A400', 'Clinical dentistry'), ('A900', 'Others in medicine & dentistry'), ('A000', 'Medicine & dentistry'), ('B100', 'Anatomy, physiology & pathology'), ('B200', 'Pharmacology, toxicology & pharmacy'), ('B300', 'Complementary medicines, therapies & well-being'), ('B400', 'Nutrition'), ('B500', 'Ophthalmics'), ('B600', 'Aural & oral sciences'), ('B700', 'Nursing'), ('B800', 'Medical technology'), ('B900', 'Others in subjects allied to medicine'), ('B000', 'Subjects allied to medicine'), ('C100', 'Biology'), ('C200', 'Botany'), ('C300', 'Zoology'), ('C400', 'Genetics'), ('C500', 'Microbiology'), ('C600', 'Sport & exercise science'), ('C700', 'Molecular biology, biophysics & biochemistry'), ('C800', 'Psychology'), ('C900', 'Others in Biological Sciences'), ('C000', 'Biological sciences'), ('D100', 'Pre-clinical veterinary medicine'), ('D200', 'Clinical veterinary medicine & dentistry'), ('D300', 'Animal science'), ('D400', 'Agriculture'), ('D500', 'Forestry & arboriculture'), ('D600', 'Food & beverage studies'), ('D700', 'Agricultural sciences'), ('D900', 'Others in veterinary sciences, agriculture & related subjects'), ('D000', 'Veterinary sciences, agriculture & related subjects'), ('F100', 'Chemistry'), ('F200', 'Materials science'), ('F300', 'Physics'), ('F400', 'Forensic & archaeological sciences'), ('F500', 'Astronomy'), ('F600', 'Geology'), ('F700', 'Science of aquatic & terrestrial environments'), ('F800', 'Physical geographical sciences'), ('F900', 'Others in physical sciences'), ('F000', 'Physical sciences'), ('G100', 'Mathematics'), ('G200', 'Operational research'), ('G300', 'Statistics'), ('G900', 'Others in mathematical sciences'), ('H100', 'General engineering'), ('H200', 'Civil engineering'), ('H300', 'Mechanical engineering'), ('H400', 'Aerospace engineering'), ('H500', 'Naval architecture'), ('H600', 'Electronic & electrical engineering'), ('H700', 'Production & manufacturing engineering'), ('H800', 'Chemical, process & energy engineering'), ('H900', 'Others in engineering'), ('H000', 'Engineering'), ('I100', 'Computer science'), ('I200', 'Information systems'), ('I300', 'Software engineering'), ('I400', 'Artificial intelligence'), ('I500', 'Health informatics'), ('I600', 'Games'), ('I700', 'Computer generated visual & audio effects'), ('I900', 'Others in Computer sciences'), ('J100', 'Minerals technology'), ('J200', 'Metallurgy'), ('J300', 'Ceramics & glass'), ('J400', 'Polymers & textiles'), ('J500', 'Materials technology not otherwise specified'), ('J600', 'Maritime technology'), ('J700', 'Biotechnology'), ('J900', 'Others in technology'), ('J000', 'Technologies'), ('K100', 'Architecture'), ('K200', 'Building'), ('K300', 'Landscape & garden design'), ('K400', 'Planning (urban, rural & regional)'), ('K900', 'Others in architecture, building & planning'), ('K000', 'Architecture, building & planning'), ('L100', 'Economics'), ('L200', 'Politics'), ('L300', 'Sociology'), ('L391', 'Sociology of science & technology'), ('L400', 'Social policy'), ('L500', 'Social work'), ('L600', 'Anthropology'), ('L700', 'Human & social geography'), ('L800', 'Development studies'), ('L900', 'Others in social studies'), ('L000', 'Social studies'), ('M000', 'Law'), ('N100', 'Business studies'), ('N200', 'Management studies'), ('N300', 'Finance'), ('N400', 'Accounting'), ('N500', 'Marketing'), ('N600', 'Human resource management'), ('N700', 'Office skills'), ('N800', 'Hospitality, leisure, sport, tourism & transport'), ('N900', 'Others in business & administrative studies'), ('N000', 'Business & administrative studies'), ('P100', 'Information services'), ('P200', 'Publicity studies'), ('P300', 'Media studies'), ('P400', 'Publishing'), ('P500', 'Journalism'), ('P900', 'Others in mass communications & documentation'), ('Q100', 'Linguistics'), ('Q200', 'Comparative literary studies'), ('Q300', 'English studies'), ('Q400', 'Ancient language studies'), ('Q500', 'Celtic studies'), ('Q600', 'Latin studies'), ('Q700', 'Classical Greek studies'), ('Q800', 'Classical studies'), ('Q900', 'Others in linguistics, classics & related subjects'), ('Q000', 'Linguistics, classics & related subjects'), ('R100', 'French studies'), ('R200', 'German studies'), ('R300', 'Italian studies'), ('R400', 'Spanish studies'), ('R500', 'Portuguese studies'), ('R600', 'Scandinavian studies'), ('R700', 'Russian & East European studies'), ('R800', 'European studies'), ('R900', 'Others in European languages, literature & related subjects'), ('R000', 'European languages, literature & related subjects'), ('T100', 'Chinese studies'), ('T200', 'Japanese studies'), ('T300', 'South Asian studies'), ('T400', 'Other Asian studies'), ('T500', 'African studies'), ('T600', 'Modern Middle Eastern studies'), ('T700', 'American studies'), ('T800', 'Australasian studies'), ('T900', 'Others in Eastern, Asiatic, African, American & Australasian languages, literature & related subjects'), ('T000', 'Eastern, Asiatic, African, American & Australasian languages, literature & related subjects'), ('V100', 'History by period'), ('V200', 'History by area'), ('V300', 'History by topic'), ('V400', 'Archaeology'), ('V500', 'Philosophy'), ('V600', 'Theology & religious studies'), ('V700', 'Heritage studies'), ('V900', 'Others in historical & philosophical studies'), ('V000', 'Historical & philosophical studies'), ('W100', 'Fine art'), ('W200', 'Design studies'), ('W300', 'Music'), ('W400', 'Drama'), ('W500', 'Dance'), ('W600', 'Cinematics & photography'), ('W700', 'Crafts'), ('W800', 'Imaginative writing'), ('W900', 'Others in creative arts & design'), ('W000', 'Creative arts & design'), ('X100', 'Training teachers'), ('X200', 'Research & study skills in education'), ('X300', 'Academic studies in education'), ('X900', 'Others in education'), ('X000', 'Education'), ('Y000', 'Combined/general subject unspecified')], default='Y000', max_length=4)),
                ('affiliation', models.CharField(max_length=120)),
                ('funding', models.CharField(max_length=120)),
                ('funding_notes', models.TextField(blank=True, null=True)),
                ('work_description', models.TextField()),
                ('website', models.URLField(blank=True, max_length=120)),
                ('website_feed', models.URLField(blank=True, max_length=120)),
                ('orcid', models.CharField(blank=True, max_length=120)),
                ('github', models.CharField(blank=True, max_length=120)),
                ('gitlab', models.CharField(blank=True, max_length=120)),
                ('twitter', models.CharField(blank=True, max_length=120)),
                ('facebook', models.CharField(blank=True, max_length=120)),
                ('application_year', models.IntegerField(default=2016)),
                ('selected', models.BooleanField(default=False)),
                ('claimedship_grant', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('notes_from_admin', models.TextField(blank=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('mentor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fat.Claimed')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='fellow',
            name='mentor',
        ),
        migrations.RemoveField(
            model_name='fellow',
            name='user',
        ),
        migrations.RemoveField(
            model_name='fund',
            name='fellow',
        ),
        migrations.AlterField(
            model_name='expense',
            name='funds_from',
            field=models.CharField(choices=[('C', 'Continuing (claimedship)'), ('I', 'Core (Software Sustainability Institute)'), ('F', 'Grant (inauguration claimedship)')], default='C', max_length=1),
        ),
        migrations.AlterField(
            model_name='expense',
            name='recipient',
            field=models.TextField(blank=True, help_text='Keep empty if the recipient is the claimed.'),
        ),
        migrations.DeleteModel(
            name='Fellow',
        ),
        migrations.AddField(
            model_name='fund',
            name='claimed',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='fat.Claimed'),
            preserve_default=False,
        ),
    ]

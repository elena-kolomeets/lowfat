# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-20 15:31
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import lowfat.validator


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('lowfat', '0086_auto_20170215_1300'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalBlog',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('draft_url', models.CharField(max_length=120)),
                ('final', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('U', 'Unprocessed'), ('R', 'On Google Drive (for review)'), ('L', 'On pipeline to be published'), ('P', 'Published'), ('D', 'Declined'), ('O', 'Out of date')], default='U', max_length=1)),
                ('notes_from_admin', models.TextField(blank=True, null=True)),
                ('published_url', models.CharField(blank=True, max_length=120, null=True)),
                ('tweet_url', models.CharField(blank=True, max_length=120, null=True)),
                ('added', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('fund', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lowfat.Fund')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical blog',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalClaimant',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('forenames', models.CharField(max_length=120)),
                ('surname', models.CharField(max_length=120)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(help_text='The number that we can contact you.', max_length=120)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('R', 'Rather not say')], default='R', max_length=1)),
                ('home_country', django_countries.fields.CountryField(default='GB', max_length=2)),
                ('home_city', models.CharField(max_length=120)),
                ('home_lon', models.FloatField(blank=True, null=True)),
                ('home_lat', models.FloatField(blank=True, null=True)),
                ('photo', models.TextField(blank=True, max_length=100, null=True)),
                ('research_area', models.TextField(blank=True, help_text='Please describe your research')),
                ('research_area_code', models.CharField(choices=[('A100', 'A100 - Pre-clinical medicine'), ('A200', 'A200 - Pre-clinical dentistry'), ('A300', 'A300 - Clinical medicine'), ('A400', 'A400 - Clinical dentistry'), ('A900', 'A900 - Others in medicine & dentistry'), ('A000', 'A000 - Medicine & dentistry'), ('B100', 'B100 - Anatomy, physiology & pathology'), ('B200', 'B200 - Pharmacology, toxicology & pharmacy'), ('B300', 'B300 - Complementary medicines, therapies & well-being'), ('B400', 'B400 - Nutrition'), ('B500', 'B500 - Ophthalmics'), ('B600', 'B600 - Aural & oral sciences'), ('B700', 'B700 - Nursing'), ('B800', 'B800 - Medical technology'), ('B900', 'B900 - Others in subjects allied to medicine'), ('B000', 'B000 - Subjects allied to medicine'), ('C100', 'C100 - Biology'), ('C200', 'C200 - Botany'), ('C300', 'C300 - Zoology'), ('C400', 'C400 - Genetics'), ('C500', 'C500 - Microbiology'), ('C600', 'C600 - Sport & exercise science'), ('C700', 'C700 - Molecular biology, biophysics & biochemistry'), ('C800', 'C800 - Psychology'), ('C900', 'C900 - Others in Biological Sciences'), ('C000', 'C000 - Biological sciences'), ('D100', 'D100 - Pre-clinical veterinary medicine'), ('D200', 'D200 - Clinical veterinary medicine & dentistry'), ('D300', 'D300 - Animal science'), ('D400', 'D400 - Agriculture'), ('D500', 'D500 - Forestry & arboriculture'), ('D600', 'D600 - Food & beverage studies'), ('D700', 'D700 - Agricultural sciences'), ('D900', 'D900 - Others in veterinary sciences, agriculture & related subjects'), ('D000', 'D000 - Veterinary sciences, agriculture & related subjects'), ('F100', 'F100 - Chemistry'), ('F200', 'F200 - Materials science'), ('F300', 'F300 - Physics'), ('F400', 'F400 - Forensic & archaeological sciences'), ('F500', 'F500 - Astronomy'), ('F600', 'F600 - Geology'), ('F700', 'F700 - Science of aquatic & terrestrial environments'), ('F800', 'F800 - Physical geographical sciences'), ('F900', 'F900 - Others in physical sciences'), ('F000', 'F000 - Physical sciences'), ('G100', 'G100 - Mathematics'), ('G200', 'G200 - Operational research'), ('G300', 'G300 - Statistics'), ('G900', 'G900 - Others in mathematical sciences'), ('H100', 'H100 - General engineering'), ('H200', 'H200 - Civil engineering'), ('H300', 'H300 - Mechanical engineering'), ('H400', 'H400 - Aerospace engineering'), ('H500', 'H500 - Naval architecture'), ('H600', 'H600 - Electronic & electrical engineering'), ('H700', 'H700 - Production & manufacturing engineering'), ('H800', 'H800 - Chemical, process & energy engineering'), ('H900', 'H900 - Others in engineering'), ('H000', 'H000 - Engineering'), ('I100', 'I100 - Computer science'), ('I200', 'I200 - Information systems'), ('I300', 'I300 - Software engineering'), ('I400', 'I400 - Artificial intelligence'), ('I500', 'I500 - Health informatics'), ('I600', 'I600 - Games'), ('I700', 'I700 - Computer generated visual & audio effects'), ('I900', 'I900 - Others in Computer sciences'), ('J100', 'J100 - Minerals technology'), ('J200', 'J200 - Metallurgy'), ('J300', 'J300 - Ceramics & glass'), ('J400', 'J400 - Polymers & textiles'), ('J500', 'J500 - Materials technology not otherwise specified'), ('J600', 'J600 - Maritime technology'), ('J700', 'J700 - Biotechnology'), ('J900', 'J900 - Others in technology'), ('J000', 'J000 - Technologies'), ('K100', 'K100 - Architecture'), ('K200', 'K200 - Building'), ('K300', 'K300 - Landscape & garden design'), ('K400', 'K400 - Planning (urban, rural & regional)'), ('K900', 'K900 - Others in architecture, building & planning'), ('K000', 'K000 - Architecture, building & planning'), ('L100', 'L100 - Economics'), ('L200', 'L200 - Politics'), ('L300', 'L300 - Sociology'), ('L391', 'L391 - Sociology of science & technology'), ('L400', 'L400 - Social policy'), ('L500', 'L500 - Social work'), ('L600', 'L600 - Anthropology'), ('L700', 'L700 - Human & social geography'), ('L800', 'L800 - Development studies'), ('L900', 'L900 - Others in social studies'), ('L000', 'L000 - Social studies'), ('M000', 'M000 - Law'), ('N100', 'N100 - Business studies'), ('N200', 'N200 - Management studies'), ('N300', 'N300 - Finance'), ('N400', 'N400 - Accounting'), ('N500', 'N500 - Marketing'), ('N600', 'N600 - Human resource management'), ('N700', 'N700 - Office skills'), ('N800', 'N800 - Hospitality, leisure, sport, tourism & transport'), ('N900', 'N900 - Others in business & administrative studies'), ('N000', 'N000 - Business & administrative studies'), ('P100', 'P100 - Information services'), ('P200', 'P200 - Publicity studies'), ('P300', 'P300 - Media studies'), ('P400', 'P400 - Publishing'), ('P500', 'P500 - Journalism'), ('P900', 'P900 - Others in mass communications & documentation'), ('Q100', 'Q100 - Linguistics'), ('Q200', 'Q200 - Comparative literary studies'), ('Q300', 'Q300 - English studies'), ('Q400', 'Q400 - Ancient language studies'), ('Q500', 'Q500 - Celtic studies'), ('Q600', 'Q600 - Latin studies'), ('Q700', 'Q700 - Classical Greek studies'), ('Q800', 'Q800 - Classical studies'), ('Q900', 'Q900 - Others in linguistics, classics & related subjects'), ('Q000', 'Q000 - Linguistics, classics & related subjects'), ('R100', 'R100 - French studies'), ('R200', 'R200 - German studies'), ('R300', 'R300 - Italian studies'), ('R400', 'R400 - Spanish studies'), ('R500', 'R500 - Portuguese studies'), ('R600', 'R600 - Scandinavian studies'), ('R700', 'R700 - Russian & East European studies'), ('R800', 'R800 - European studies'), ('R900', 'R900 - Others in European languages, literature & related subjects'), ('R000', 'R000 - European languages, literature & related subjects'), ('T100', 'T100 - Chinese studies'), ('T200', 'T200 - Japanese studies'), ('T300', 'T300 - South Asian studies'), ('T400', 'T400 - Other Asian studies'), ('T500', 'T500 - African studies'), ('T600', 'T600 - Modern Middle Eastern studies'), ('T700', 'T700 - American studies'), ('T800', 'T800 - Australasian studies'), ('T900', 'T900 - Others in Eastern, Asiatic, African, American & Australasian languages, literature & related subjects'), ('T000', 'T000 - Eastern, Asiatic, African, American & Australasian languages, literature & related subjects'), ('V100', 'V100 - History by period'), ('V200', 'V200 - History by area'), ('V300', 'V300 - History by topic'), ('V400', 'V400 - Archaeology'), ('V500', 'V500 - Philosophy'), ('V600', 'V600 - Theology & religious studies'), ('V700', 'V700 - Heritage studies'), ('V900', 'V900 - Others in historical & philosophical studies'), ('V000', 'V000 - Historical & philosophical studies'), ('W100', 'W100 - Fine art'), ('W200', 'W200 - Design studies'), ('W300', 'W300 - Music'), ('W400', 'W400 - Drama'), ('W500', 'W500 - Dance'), ('W600', 'W600 - Cinematics & photography'), ('W700', 'W700 - Crafts'), ('W800', 'W800 - Imaginative writing'), ('W900', 'W900 - Others in creative arts & design'), ('W000', 'W000 - Creative arts & design'), ('X100', 'X100 - Training teachers'), ('X200', 'X200 - Research & study skills in education'), ('X300', 'X300 - Academic studies in education'), ('X900', 'X900 - Others in education'), ('X000', 'X000 - Education'), ('Y000', 'Y000 - Combined/general subject unspecified')], default='Y000', max_length=4)),
                ('affiliation', models.CharField(blank=True, max_length=120)),
                ('funding', models.CharField(blank=True, max_length=120)),
                ('funding_notes', models.TextField(blank=True, null=True)),
                ('work_description', models.TextField(blank=True)),
                ('website', models.CharField(blank=True, max_length=120)),
                ('website_feed', models.CharField(blank=True, max_length=120)),
                ('orcid', models.CharField(blank=True, max_length=120)),
                ('github', models.CharField(blank=True, max_length=120)),
                ('gitlab', models.CharField(blank=True, max_length=120)),
                ('twitter', models.CharField(blank=True, max_length=120)),
                ('facebook', models.CharField(blank=True, max_length=120)),
                ('slug', models.CharField(max_length=120)),
                ('application_year', models.IntegerField(default=2017)),
                ('selected', models.BooleanField(default=False)),
                ('software_carpentry_instructor', models.BooleanField(default=False)),
                ('data_carpentry_instructor', models.BooleanField(default=False)),
                ('claimantship_grant', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('notes_from_admin', models.TextField(blank=True, null=True)),
                ('added', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lowfat.HistoricalClaimant')),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical claimant',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalExpense',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('relative_number', models.IntegerField()),
                ('claim', models.TextField(max_length=100, validators=[lowfat.validator.pdf])),
                ('amount_claimed', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('justification_for_extra', models.TextField(blank=True, max_length=120)),
                ('final', models.BooleanField(default=False)),
                ('recipient_fullname', models.CharField(blank=True, max_length=120)),
                ('recipient_email', models.EmailField(blank=True, max_length=254)),
                ('recipient_affiliation', models.CharField(blank=True, max_length=120)),
                ('recipient_group', models.CharField(blank=True, max_length=120)),
                ('recipient_connection', models.CharField(blank=True, max_length=120)),
                ('status', models.CharField(choices=[('W', 'Not submitted yet'), ('S', 'Submitted (awaiting processing)'), ('C', 'Administrator checking'), ('P', 'Authoriser checking'), ('A', 'Approved (submitted to finance)'), ('F', 'Finished')], default='P', max_length=1)),
                ('received_date', models.DateField(default=django.utils.timezone.now)),
                ('asked_for_authorization_date', models.DateField(blank=True, null=True)),
                ('send_to_finance_date', models.DateField(blank=True, null=True)),
                ('amount_authorized_for_payment', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('funds_from', models.CharField(choices=[('C', 'Continuing (claimantship)'), ('I', 'Core (Software Sustainability Institute)'), ('F', 'Grant (inauguration claimantship)')], default='G', max_length=1)),
                ('grant_used', models.CharField(choices=[('SSI1', 'Software Sustainability Institute - Phase 1'), ('SSI2', 'Software Sustainability Institute - Phase 2'), ('SSI3', 'Software Sustainability Institute - Phase 3')], default='SS2', max_length=4)),
                ('notes_from_admin', models.TextField(blank=True, null=True)),
                ('added', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('fund', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lowfat.Fund')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical expense',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalFund',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('category', models.CharField(choices=[('A', 'Attending a conference/workshop'), ('H', 'Organising a conference/workshop (e.g. Software Carpentry)'), ('P', 'Policy related event'), ('O', 'Other')], default='O', max_length=1)),
                ('category_other', models.CharField(blank=True, max_length=120)),
                ('name', models.CharField(max_length=120)),
                ('url', models.CharField(blank=True, max_length=120)),
                ('country', django_countries.fields.CountryField(default='GB', max_length=2)),
                ('city', models.CharField(max_length=120)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('budget_request_travel', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('budget_request_attendance_fees', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('budget_request_subsistence_cost', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('budget_request_venue_hire', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('budget_request_catering', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('budget_request_others', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('budget_approved', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('justification', models.TextField()),
                ('additional_info', models.TextField(blank=True)),
                ('extra_sponsored', models.TextField(blank=True)),
                ('can_be_advertise_before', models.BooleanField(default=False)),
                ('can_be_advertise_after', models.BooleanField(default=True)),
                ('ad_status', models.CharField(choices=[('U', 'Unprocessed'), ('V', 'Visible'), ('H', 'Hide')], default='U', max_length=1)),
                ('status', models.CharField(choices=[('U', 'Unprocessed'), ('P', 'Processing'), ('A', 'Approved'), ('R', 'Reproved'), ('F', 'Archived'), ('C', 'Canceled')], default='U', max_length=1)),
                ('required_blog_posts', models.IntegerField(default=1)),
                ('notes_from_admin', models.TextField(blank=True, null=True)),
                ('added', models.DateTimeField(blank=True, editable=False)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('claimant', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lowfat.Claimant')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical fund',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
        migrations.CreateModel(
            name='HistoricalGeneralSentMail',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('justification', models.TextField()),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('receiver', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='lowfat.Claimant')),
                ('sender', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical general sent mail',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
        ),
    ]
